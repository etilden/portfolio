{"version":3,"sources":["square_.png","ahoy.png","cubeClicker.png","markdownEditor.png","omnivoreStore.png","project.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Project","props","className","src","project","image","alt","name","description","href","github","deploy","video","App","projects","id","ahoyImg","markdownEditorImg","cubeClickerImg","omnivoreStoreImg","AOS","init","duration","this","map","data-aos","data-aos-offset","data-aos-delay","data-aos-duration","data-aos-easing","data-aos-mirror","data-aos-once","data-aos-anchor-placement","key","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,sUCqB5BC,MAff,SAAiBC,GACf,OACE,yBAAKC,UAAU,OACb,yBAAKC,IAAKF,EAAMG,QAAQC,MAAOC,IAAI,cACnC,4BAAKL,EAAMG,QAAQG,MACnB,2BAAIN,EAAMG,QAAQI,aAClB,6BACE,uBAAGC,KAAMR,EAAMG,QAAQM,QAAQ,kBAAC,IAAD,OAC7BT,EAAMG,QAAQO,OAAgB,uBAAGF,KAAMR,EAAMG,QAAQO,QAAQ,kBAAC,IAAD,OAAtC,KACvBV,EAAMG,QAAQQ,MAAc,uBAAGH,KAAMR,EAAMG,QAAQQ,OAAO,kBAAC,IAAD,OAApC,Q,yBCoGjBC,G,wDAnGb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,SAAW,CACd,CACEC,GAAI,EACJR,KAAM,QACNF,MAAOW,IACPR,YAAa,wLACbE,OAAQ,2CACRC,QAAQ,EACRC,MAAO,oGAET,CACEG,GAAI,EACJR,KAAM,kBACNF,MAAOY,IACPT,YAAa,gHACbE,OAAQ,wDACRC,OAAQ,wDAEV,CACEI,GAAI,EACJR,KAAM,cACNF,MAAOa,IACPV,YAAa,kGACbE,OAAQ,yCACRC,OAAQ,wCACRC,OAAO,GAET,CACEG,GAAI,EACJR,KAAM,iBACNF,MAAOc,IACPX,YAAa,iLACbE,OAAQ,yDACRC,OAAQ,wCACRC,OAAO,IApCM,E,gEA0CjBQ,IAAIC,KAAK,CACPC,SAAU,S,+BAOZ,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKC,IAAKE,IAAOH,UAAU,OAAOI,IAAI,UAExC,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,SACb,wCACA,iDACA,2DAAgC,6BAAhC,6BAIN,yBAAKA,UAAU,YACb,iDAAsB,6BAAtB,mBACA,kBAAC,IAAD,QAGJ,yBAAKA,UAAU,YACZqB,KAAKT,SAASU,KAAI,SAAApB,GACnB,OAAO,yBAAKqB,WAAS,UACrBC,kBAAgB,KAChBC,iBAAe,KACfC,oBAAkB,OAClBC,kBAAgB,cAChBC,kBAAgB,OAChBC,gBAAc,QACdC,4BAA0B,aAE1B9B,UAAWE,EAAQW,GAAG,IAAI,EAAI,OAAQ,MAAOkB,IAAK7B,EAAQW,IAAI,kBAAC,EAAD,CAASkB,IAAK7B,EAAQW,GAAIX,QAASA,SAGnG,yBAAKF,UAAU,WACb,6BACA,kEACA,6BACA,yCACA,6BACA,sEACA,uBAAGO,KAAM,uCAAuC,kBAAC,IAAD,OAAkB,uBAAGA,KAAM,6BAA6B,kBAAC,IAAD,a,GA5FhGyB,IAAMC,YCHJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c8dc83f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/square_.decfea48.png\";","module.exports = __webpack_public_path__ + \"static/media/ahoy.3fc6c990.png\";","module.exports = __webpack_public_path__ + \"static/media/cubeClicker.1d4ef831.png\";","module.exports = __webpack_public_path__ + \"static/media/markdownEditor.f3620c5a.png\";","module.exports = __webpack_public_path__ + \"static/media/omnivoreStore.67016dc5.png\";","import React from 'react'; \nimport {MdRssFeed} from 'react-icons/md'\nimport {GoMarkGithub} from 'react-icons/go'\nimport {FaYoutube} from 'react-icons/fa'\nimport './project.css'\n\nfunction Project(props) {\n  return (\n    <div className=\"box\">\n      <img src={props.project.image} alt=\"screencap\"/> \n      <h2>{props.project.name}</h2>\n      <p>{props.project.description}</p>\n      <div> \n        <a href={props.project.github}><GoMarkGithub /></a>\n        {!props.project.deploy ? null : <a href={props.project.deploy}><MdRssFeed /></a>}  \n        {!props.project.video ? null: <a href={props.project.video}><FaYoutube /></a>}\n      </div>\n    </div>\n  )\n};\n\nexport default Project","import React from 'react';\nimport './App.css';\nimport image from './square_.png'\nimport ahoyImg from \"./ahoy.png\";\nimport cubeClickerImg from \"./cubeClicker.png\"\nimport markdownEditorImg from \"./markdownEditor.png\"\nimport omnivoreStoreImg from \"./omnivoreStore.png\"\nimport Project from \"./project\"\nimport { IoIosArrowDown } from \"react-icons/io\"\nimport {GoMarkGithub} from 'react-icons/go'\nimport {FaLinkedin} from \"react-icons/fa\"\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.projects = [\n      {\n        id: 1,\n        name: \"Ahoy!\", \n        image: ahoyImg,\n        description: 'A mobile app that uses photo recognition, geolocation, and push notifications to create a shared network of scavenger hunts, clues, and games that users can play with their friends.', \n        github: 'https://github.com/MERV-spice/basic-merv',\n        deploy: false,\n        video: 'https://www.youtube.com/watch?v=8kqbZ2NJA1A&list=PLx0iOsdUOUmkGPFdAt5kHKxGQw_YseAQI&index=2&t=0s'\n      },\n      {\n        id: 2,\n        name: \"Markdown Editor\", \n        image: markdownEditorImg,\n        description: 'Markdown Editor converts standard markdown into its final product and renders in real time on the same page. ', \n        github: 'https://github.com/etilden/2020-04-11-Markdown-Editor',\n        deploy: \"https://etilden.github.io/2020-04-11-Markdown-Editor\"\n      },\n      {\n        id: 3,\n        name: \"CubeClicker\", \n        image: cubeClickerImg,\n        description: 'A three-dimensional game in which a user clicks moving cubes to keep them in the field of play.', \n        github: 'https://github.com/etilden/CubeClicker',\n        deploy: 'https://etilden.github.io/CubeClicker',\n        video: false\n      },\n      {\n        id: 4,\n        name: \"Omnivore Store\", \n        image: omnivoreStoreImg,\n        description: 'An e-commerce website developed over 8 days in partnership with 2 peer developers, Omnivore Store offers a member or guest users a secure and intuitive purchasing experience.', \n        github: 'https://github.com/Banyan-Omnivore-Store/grace-shopper',\n        deploy: 'https://omnivore-store.herokuapp.com/',\n        video: false, \n      }\n    ]\n  }\n\n  componentDidMount() {\n    AOS.init({\n      duration: 2500\n    }); \n  };\n\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-content\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <img src={image} className=\"left\" alt=\"logo\" />\n            </div>\n            <div className=\"col\">\n              <div className=\"right\">\n                <h1>Hello...</h1>\n                <h2>My name is Emma. </h2>\n                <h3>I am a full stack developer <br/>based in Chicago, IL. </h3>\n              </div>\n            </div>\n        </div>\n          <div className=\"scroller\">\n            <p>scroll down to see <br /> my projects...</p>\n            <IoIosArrowDown />\n          </div>\n          </div>\n        <div className=\"projects\">\n          {this.projects.map(project => { \n          return <div data-aos=\"fade-up\"\n          data-aos-offset=\"50\"\n          data-aos-delay=\"10\"\n          data-aos-duration=\"1000\"\n          data-aos-easing=\"ease-in-out\"\n          data-aos-mirror=\"true\"\n          data-aos-once=\"false\"\n          data-aos-anchor-placement=\"top-center\"\n          \n          className={project.id%2===0 ? 'even': 'odd'} key={project.id}><Project key={project.id} project={project}/></div>\n          })}\n        </div>\n        <div className=\"contact\">\n          <br />\n          <h3>contact me at e.k.tilden@gmail.com</h3>\n          <br />\n          <div> .  .  .</div>\n          <br />\n          <h3>or check out more of my previous work:</h3>\n          <a href={\"http://linkedin.com/in/emma-tilden/\"}><FaLinkedin /></a><a href={\"http://github.com/etilden\"}><GoMarkGithub /></a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}